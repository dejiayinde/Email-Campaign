"""Intial Data Transformation Step for Capstone Project"""

import numpy as np
import pandas as pd
import os
import re


#column names(variable names) of the email data
colnames = ['user_id', 'ConversationID', 'MessageID', 'MessageTitle', 'MessageType', 'MessageChannel',
            'Folder_CampaignReference', 'Folder_CampaignName', 'MessageVersionSent', 'MessageStyle_EmailTemplate', 
            'DeliveredAs', 'SentAt', 'OpenedAt', 'ClickedAt', 'HitGoalAt', 'Replied_RespondedAt', 'UnsubscribedAt', 
            'BouncedAt', 'MarkedAsSpamAt']

#Reading data into python environment
a20bp = pd.read_csv('7539ce7c-0c90-4875-9e45-b4cda9b13165.csv')  #20 Bonus Points
cw20p = pd.read_csv('c8bf9f17-a5af-4692-842f-31163391b04c.csv') #Co-Workers + 20 points
jwf = pd.read_csv('d3cd2cfb-20ec-43a2-ae95-779145b7edf9.csv') #Join your work friends
lc20p = pd.read_csv('294f9fa8-c290-4b77-8633-4bee897cd6c3.csv') #Last chance 20 Points
demography = pd.read_csv('User_Demographic_Data.csv') #User demographic info

met1 = pd.read_csv('e1783dab-cdb1-43c4-8806-9b7f751c815d.csv') #4 ways to succeed with MetLife Wellbeing
met2 = pd.read_csv('d776a5fd-cc3a-4df7-be31-729037c09c74.csv') #hello, start your metlife wellbeing journey
met3 = pd.read_csv('wsbipu3g.66399fc3-c0a3-4337-bbd1-ef7c8403d1c9.csv') #Invest in your most valuable asset, you
met4 = pd.read_csv('3f127d69-ca6c-41b8-9990-37ddde504e5c.csv') #Metlife Wellbeing Has Something Special For You
met5 = pd.read_csv('d0884e8d-4b3a-4884-bd39-720b1a9fe5c1.csv') #Win big with MetLife Wellbeing
met6 = pd.read_csv('b663d2e5-4f48-476d-8668-14f17f041f68.csv') #Boost your Health
met7 = pd.read_csv('5ab20d15-ff17-4e4b-8d44-0882792eb533.csv') #Ready for Healthier You
met8 = pd.read_csv('8bfaa69a-ab24-457a-b275-3fbb1911e7cd.csv') #Wellbeing Journey
met9 = pd.read_csv('b004496d-6c0f-49c1-8fce-db35b8c8b514.csv') #Wellbeing Journey

sfarm1 = pd.read_csv('dea37215-59b9-4af9-884a-60bc407e2453.csv') #A healthier _name_ starts with
sfarm2 = pd.read_csv('6fee9b9c-fc24-492e-b5fe-e2464b003431.csv') #Four ways to a healthier _Name_
sfarm3 = pd.read_csv("62116366-18d0-4e67-b987-62e28122620c.csv") #Friend, let's try this again
sfarm4 = pd.read_csv('d39495b5-c7b6-401e-a176-e59a2f01fc2a.csv') #Friend, your rewards are here
sfarm5 = pd.read_csv("8a1038c6-01aa-48f3-8eaa-6db1890dca73.csv") #Friend, you're missing out on cash rewards
sfarm6 = pd.read_csv('268d00bb-e70f-4e73-aa65-de1140ff212a.csv') #Hey, join us
sfarm7 = pd.read_csv('0a8ec5db-2ca3-4212-a64f-c0289eb5b060.csv') #take next step toward healthier you
sfarm8 = pd.read_csv('a1ec75d6-5423-4758-ac28-e923cc2cd06d.csv') #Welcome to your Good4U journey

#list of Email data
alldata = (a20bp,cw20p,jwf,lc20p,met1,met2,met3,met4,met5,met6,met7,met8,met9,sfarm1,sfarm2,sfarm3,sfarm4,sfarm5,sfarm6,sfarm7,sfarm8)


#merging all email data and filtering out unwanted userid and message version sent       
allmsg = pd.concat([a20bp,cw20p,jwf,lc20p,met1,met2,met3,met4,met5,met6,met7,met8,met9,sfarm1,sfarm2,sfarm3,sfarm4,sfarm5,sfarm6,sfarm7,sfarm8])
allmsg.columns = colnames
allmsg.drop(['MessageID','ConversationID','MessageChannel','Folder_CampaignReference','Folder_CampaignName','MessageStyle_EmailTemplate','MessageType','DeliveredAs'], axis = 1, inplace = True)
allmsg = allmsg[~allmsg['user_id'].isin([379120000000000,379120000000000])]   #filtering unwanted user_id
allmsg = allmsg[~allmsg['MessageVersionSent'].isin([76733597,85737985,59182527,76731781,32964691,20727083,47881988,48911103,52779088,84884537,85660308,85857362,76731782,86251826,76731777,85143902])]
msgData = allmsg[allmsg['user_id'].notnull()]
#***********************************************************************************
#Feature creation and manipulation
#The emails(pdf copies) were analysed and the following features were derived. -- See attached excel file - 'pdf variables)
pdfVariables = pd.read_excel('PDF Variables.xlsx')
mergedData = pd.merge(msgData, pdfVariables, how = 'left', left_on = 'MessageVersionSent', right_on = 'Version_id')
 
 
 #converting the timecolumns to python datetime format
timecols = msgData.loc[:,'SentAt':'MarkedAsSpamAt'].columns
for tcolumns in timecols:
    msgData[tcolumns] = pd.to_datetime(msgData[tcolumns])
     
       
#SentPeriod
msgData.loc[msgData['SentAt'].dt.hour < 8, "TimeOfDaySent"] = "NightMornHrs"
msgData.loc[(msgData['SentAt'].dt.hour >= 8) & (msgData['SentAt'].dt.hour < 17), "TimeOfDaySent"] = "workHrs"
msgData.loc[msgData['SentAt'].dt.hour >= 17, "TimeOfDaySent"] = "afterWorkHrs"
    
 #WeekDaySent
msgData['WeekDaySent'] = msgData['SentAt'].dt.weekday_name
    
    #TimeOfDayOpen
msgData.loc[msgData['OpenedAt'].dt.hour < 8, "TimeOfDayOpen"] = "NightMornHrs"
msgData.loc[(msgData['OpenedAt'].dt.hour >= 8) & (msgData['OpenedAt'].dt.hour < 17), "TimeOfDayOpen"] = "workHrs"
msgData.loc[msgData['OpenedAt'].dt.hour >= 17, "TimeOfDayOpen"] = "afterWorkHrs"


#WeekDayOpen
msgData['WeekDayOpen'] = msgData['OpenedAt'].dt.weekday_name
    
 #time it took to open campaign mail
timeToOpen = msgData['OpenedAt'] - msgData['SentAt']

#data['timeToOpenInDays'] = data[timeToOpen].dt.days
msgData['timeToOpenMins'] = timeToOpen.dt.total_seconds()/60
    
#********************************************************************** 

#exporting merged dataset to csv
mergedData.to_csv('msgData.csv', index = False)






